version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pickbazar_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-pickbazar_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pickbazar_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: pickbazar_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pickbazar_network

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pickbazar_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pickbazar_network

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pickbazar_celery
    restart: unless-stopped
    command: celery -A pickbazar_shop worker -l info
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    depends_on:
      - db
      - redis
      - backend
    networks:
      - pickbazar_network

  # Celery Beat (برای کارهای زمان‌بندی شده)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pickbazar_celery_beat
    restart: unless-stopped
    command: celery -A pickbazar_shop beat -l info
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
    networks:
      - pickbazar_network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pickbazar_frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pickbazar_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pickbazar_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/staticfiles:ro
      - media_volume:/media:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - pickbazar_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  pickbazar_network:
    driver: bridge
